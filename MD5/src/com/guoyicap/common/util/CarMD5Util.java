package com.guoyicap.common.util;

import java.security.MessageDigest;
import java.util.*;

public class CarMD5Util {

  public static final String salt = "20180928";

  public static void main(String[] args) {
	  
	String appkey="BITEPIPEI";
	long timestamp=System.currentTimeMillis();
	System.out.println(timestamp);
	String sign=appkey+timestamp;
	System.out.println(sign);
    String sn = CarMD5Util.md5(sign);
    System.out.println(sn);
  }

  public static final String md5(String content) {
    // 用于加密的字符
    char[] md5String = {
      '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'
    };
    try {
      // 使用平台的默认字符集将此 String 编码为 byte序列，并将结果存储到一个新的 byte数组中
      StringBuilder sb = new StringBuilder();
      sb.append(content).append(salt);
      byte[] btInput = sb.toString().getBytes();

      // 信息摘要是安全的单向哈希函数，它接收任意大小的数据，并输出固定长度的哈希值。
      MessageDigest mdInst = MessageDigest.getInstance("MD5");

      // MessageDigest对象通过使用 update方法处理数据， 使用指定的byte数组更新摘要
      mdInst.update(btInput);

      // 摘要更新之后，通过调用digest（）执行哈希计算，获得密文
      byte[] md = mdInst.digest();

      // 把密文转换成十六进制的字符串形式
      int j = md.length;
      char[] str = new char[j * 2];
      int k = 0;
      for (int i = 0; i < j; i++) { //  i = 0
        byte byte0 = md[i]; // 95
        str[k++] = md5String[byte0 >>> 4 & 0xf]; //    5
        str[k++] = md5String[byte0 & 0xf]; //   F
      }

      // 返回经过加密后的字符串
      return new String(str);

    } catch (Exception e) {
      return null;
    }
  }
}

